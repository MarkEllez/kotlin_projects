package oop.data_class

fun main() {
    var student1 = data_class("Иван", "Иванов", "222")
    var student2 = data_class("Иван", "Иванов", "222")

    //деструктивный оператор
    // var (name, _, id) = student1
    //из выражения выше - из объекта student1 возьмутся указанные в нем поля и сохранятся в отдельные переменные
    //дальше можно будет работать с ними как с обычными переменными
    //println(name)

    //если какая-то из переменных не нужна - она будет указываться как _ - см пример выше с переменной lastName

    /*
    Чтобы создать объект с такими же полями, как у другого объекта, но при этом чтобы они ссылались на разные объекты
    нужно, чтобы класс был data и вызвать метод copy() для нового объекта

    var student3 = student1.copy()

    Если хотим поменять какое-либо значение у параметра объекта, то внутри метода copy нужно явно прописать
    параметр = новое_значение. Пример:

    var student3 = student1.copy(id = "123213")

     */

    var student3 = student1.copy(id = "123213")




    //в Kotlin знак === означает - ссылаются ли данные переменные на один и тот же объект
    // а знак == - сравнение значений в сравниваемых объектах


    //если класс обычный, то при выводе println(student1) будет выводиться стандартная реализация метода toString(),
    //так как он не был переопределен в классе data_class


    //Отличия class от data class
    //1) если определим data_class с помощю ключ слова data, то метод toString() будет автоматически переопределен,
    //который будет выводить всю информацию об объекте
    //2) автоматически переопределяется hashcode()
    //3) автоматически переопределяется equals()
    //4) добавился деструктор (деструктивный оператор) - см выше

    //______________________________________________________________________________________________________
    /*
    если не указывать класс ключевым словом data, то при создании деструктора будет появляться ошибка
    Чтобы она не возникала - нужно переопределить component в нашем классе data_class

     * */

//______________________________________________________________________________________________________
    //Homework
    //создать класс address с обяз полями city, street, numberOfHouse






    //Чтобы код ниже работал - нужно проставить классу ключ слово data, либо переопределить все использующиеся методы
   // в классе Address_data_class_hw

    //создать объект класса в вызывающем классе main
    var address1 = Address_data_class_hw("Balashov", "Saratovskaya", 1)

    //создать второй такой же объект с методом copy()
    var address2 = address1.copy()

    //вывести на экран значения этих объектов, их hashCode() и результат сравнения объектов по equals() (== в kotlin)
    println(address1)
    println(address2)
    println(address1.hashCode())
    println(address2.hashCode())
    println(address1 == address2)

    //с пом деструктора разложить объект на составные части, сохранив значения в соотв-щие переменные
    var (city, street, numberOfHouse) = address1
    println(city + " " + street + " " + numberOfHouse)


    //удалить ключ слово data и реализовать все необх-мые методы, чтобы работа метода main осталась прежней
    //см переопределение методов в классе Address_data_class_hw


}