package oop.constructors


//есть два вида конструкторов: первичный и вторичный
//первичный конструктор создается после имени класса в круглых скобках с параметрами
//вторичный конструктор создается с пом ключ слова constructor() - в него надо передать параметры
    //, которые позже будут инициализированы при создании объекта

class example_constr (val name: String = "", val population: Long = 0) {

    //так как эти поля объявлены как var  - то у них уже есть геттеры и сеттеры
    //также так как эти поля объявлены как var  - то поменять их значение можно после инициализации в объекте
    //чтобы не было такой возможности - нужно эти переменные объявить как val

/* primary constructor

    var name: String
    var population: Long


    constructor(name: String, population: Long){
        this.name = name
        this.population = population
    }
 */

    //Чтобы создать вторичный конструктор без параметров, дабы создать дефолтные значения
    // , при этом оставив первичный, нужно создать:

    //constructor(): this ("", 0){}

    //теперь если создать объект, не передавая в него никаких параметров, то они приобретут дефолтные значения
    //но чтобы не создавать конструктор без параметров, можно в параметрах класса проинициализировать параметры:

    //class example_constr (val name: String = "", val population: Long = 0) {}



}